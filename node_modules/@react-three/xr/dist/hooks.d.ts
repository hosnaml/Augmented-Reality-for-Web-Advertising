import { RefObject } from 'react';
import { Object3D } from 'three';
import { PointerEvent } from '@pmndrs/pointer-events';
export declare function useHover(ref: RefObject<Object3D | null>): boolean;
export declare function useHover(ref: RefObject<Object3D | null>, onChange: (hover: boolean, event: PointerEvent) => void): void;
/**
 * hook for getting the session visibility state
 */
export declare function useXRSessionVisibilityState(): XRVisibilityState | undefined;
/**
 * hook for getting the function to initialize the room capture for scanning the room
 */
export declare function useInitRoomCapture(): (() => Promise<undefined>) | undefined;
/**
 * hook for checking if a session mode is supported
 * @param onError callback executed when an error happens while checking if the session mode is supported
 */
export declare function useXRSessionModeSupported(mode: XRSessionMode, onError?: (error: any) => void): boolean | undefined;
/**
 * @deprecated use useXRSessionModeSupported instead
 */
export declare const useSessionModeSupported: typeof useXRSessionModeSupported;
export declare function useXRSessionFeatureEnabled(feature: string): boolean;
/**
 * @deprecated use useXRSessionFeatureEnabled instead
 */
export declare const useSessionFeatureEnabled: typeof useXRSessionFeatureEnabled;
