import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { ControllerUI } from './controller.js';
import { HandUI } from './hand.js';
import { create } from 'zustand';
export const useInputModeStore = create((set) => ({
    inputMode: 'controller',
    setInputMode: (mode) => set(() => ({
        inputMode: mode,
    })),
}));
export const ControlsUI = ({ xrDevice, inputLayer, pointerLocked, }) => {
    const { inputMode } = useInputModeStore();
    return (_jsx(_Fragment, { children: inputMode === 'controller'
            ? Object.entries(xrDevice.controllers).map(([handedness, controller]) => (_jsx(ControllerUI, { controller: controller, handle: inputLayer.transformHandles.get(handedness), handedness: handedness, pointerLocked: pointerLocked }, `controller-${handedness}`)))
            : Object.entries(xrDevice.hands).map(([handedness, hand]) => (_jsx(HandUI, { hand: hand, handle: inputLayer.transformHandles.get(handedness), handedness: handedness, pointerLocked: pointerLocked }, `hand-${handedness}`))) }));
};
//# sourceMappingURL=controls.js.map